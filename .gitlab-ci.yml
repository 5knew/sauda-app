stages:
  - test
  - build
  - security
  - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"

services:
  - postgres:15

variables:
  POSTGRES_DB: sauda_db_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: secret
  POSTGRES_HOST_AUTH_METHOD: trust

test:
  stage: test
  image: openjdk:21-jdk-slim
  before_script:
    - apt-get update -qq && apt-get install -y -qq git
  script:
    - ./mvnw clean test
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    paths:
      - target/surefire-reports/
    expire_in: 1 week

build:
  stage: build
  image: openjdk:21-jdk-slim
  before_script:
    - apt-get update -qq && apt-get install -y -qq git
  script:
    - ./mvnw clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week

security-scan:
  stage: security
  image: openjdk:21-jdk-slim
  script:
    - ./mvnw org.owasp:dependency-check-maven:check
  artifacts:
    reports:
      dependency_scanning: target/dependency-check-report.html
    paths:
      - target/dependency-check-report.html
    expire_in: 1 week

docker-build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main

deploy-staging:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Deploying to staging..."
    - curl -X POST $STAGING_WEBHOOK_URL
  only:
    - main
  when: manual

deploy-production:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Deploying to production..."
    - curl -X POST $PRODUCTION_WEBHOOK_URL
  only:
    - main
  when: manual
